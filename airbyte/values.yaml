# Abi: most of the container images are coming from the Airbyte GHCR, nr-containers GHCR, or otherwise being redirected to to Artifactory Docker Hub proxy

##  global -- Global params that are overwritten with umbrella chart
global:
  ##  serviceAccountName -- Service Account name override
  serviceAccountName: &service-account-name "airbyte-admin" # Abi: this service account has an image pull secret attached to it
  ##  deploymentMode -- Deployment mode, whether or not render the default env vars and volumes in deployment spec
  deploymentMode: "oss"
  # -- Edition; "community" or "pro"
  edition: "community"
  podLabels:
    DataClass: Medium # Abi: 'Low' for app pods, 'Medium' for jobs
    Release: test-release-ab # Abi: Release label is attached to nwp
  env_vars: {}
  # Database configuration override
  database:
    # -- Secret name where database credentials are stored
    secretName: ""
    # -- Secret value for database password
    secretValue: ""
  # todo: remove so there is no need to create secrets for gcs if not using gcs
  storage:
    type: minio # default storage used

          ## Abi: example of using external s3
      ## enabled: true
      ## bucket: bvtnvt
      ## bucketRegion: us-east-1

  metrics:
    # -- The metric client to configure globally. Supports "otel"
    metricClient: ""
    # -- The open-telemetry-collector endpoint that metrics will be sent to
    otelCollectorEndpoint: ""

  # Jobs resource requests and limits, see http://kubernetes.io/docs/user-guide/compute-resources/
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube.
  jobs:
    resources:
      requests:
        memory: '256Mi'
        cpu: '50m'
      ## requests: {}
      limits:
        cpu: '500m'
        memory: '1Gi'
      ## limits: {}

    kube:
      ## JOB_KUBE_ANNOTATIONS
      # pod annotations of the sync job and the default pod annotations fallback for others jobs
      # -- key/value annotations applied to kube jobs
      annotations: {}

      ## JOB_KUBE_LABELS
      ## pod labels of the sync job and the default pod labels fallback for others jobs
      ##  jobs.kube.labels [object] key/value labels applied to kube jobs
      labels: # Abi: 'Low' for app pods, 'Medium' or 'High' for jobs.
        DataClass: Medium

      ## JOB_KUBE_NODE_SELECTORS
      ## pod node selector of the sync job and the default pod node selector fallback for others jobs
      # -- Node labels for pod assignment
      nodeSelector: {}

      ## JOB_KUBE_TOLERATIONS
      # -- Node tolerations for pod assignment
      #  Any boolean values should be quoted to ensure the value is passed through as a string.
      tolerations: []

      ## JOB_KUBE_MAIN_CONTAINER_IMAGE_PULL_SECRET
      # -- image pull secret to use for job pod
      main_container_image_pull_secret: ""

      images:
        ## JOB_KUBE_BUSYBOX_IMAGE
        ## busybox image used by the job pod
        ##   jobs.kube.images.busybox [string] busybox image used by the job pod
        busybox: artifacts.developer.gov.bc.ca/docker-remote/busybox # Abi: Redirects to Artifactory Docker Hub proxy. Needed to not hit Docker Hub pull limit
        ## JOB_KUBE_SOCAT_IMAGE
        ## socat image used by the job pod
        ##   jobs.kube.images.socat [string] socat image used by the job pod
        socat: artifacts.developer.gov.bc.ca/docker-remote/alpine/socat # Abi: Redirects to Artifactory Docker Hub proxy. Needed to not hit Docker Hub pull limit
        ## JOB_KUBE_CURL_IMAGE
        ## curl image used by the job pod
        ##   jobs.kube.images.curl [string] curl image used by the job pod
        curl: artifacts.developer.gov.bc.ca/docker-remote/curlimages/curl # Abi: Redirects to Artifactory Docker Hub proxy. Needed to not hit Docker Hub pull limit

# Abi: for GitHub container registry
  # image:
    # registry: ghcr.io
    # repository: bcgov/nr-containers/airbyte/[container]
    # tag: [tag from FROM line in Dockerfile]

##  nameOverride -- String to partially override airbyte.fullname template with a string (will prepend the release name)
nameOverride: ""
# -- String to fully override airbyte.fullname template with a string
fullnameOverride: ""

# Pods Service Account, see https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # -- Specifies whether a ServiceAccount should be created
  create: true
  # -- Annotations for service account. Evaluated as a template. Only used if `create` is `true`.
  annotations: {}
  # -- Name of the service account to use. If not set and create is true, a name is generated using the fullname template.
  name: *service-account-name

# -- Sets the AIRBYTE_VERSION environment variable. Defaults to Chart.AppVersion.
## If changing the image tags below, you should probably also update this.
version: ""

## @section Webapp Parameters

webapp:
  enabled: true
  # -- Number of webapp replicas
  replicaCount: 1

  ##  webapp.image.repository
  ##  webapp.image.pullPolicy
  ##  webapp.image.tag The airbyte webapp image tag. Defaults to the chart's AppVersion
  image:
  ## airbyte/webapp
    # Abi: this is a custom Docker image with a container port of 8080 instead of 80
    repository: ghcr.io/bcgov/nr-containers/airbyte/airbyte-web # image-registry .openshift-image-registry.svc:5000/a1b9b0-dev/airbyte-webapp-port-change@sha256:0a2a9306f9f39cc7f7f403584bd357ac3939843b938aa9919d223a72e5723b64
    tag: null
  pullPolicy: IfNotPresent

  # -- Add extra annotations to the webapp pods
  podAnnotations: {}

  ##  webapp.podLabels [object] Add extra labels to the webapp pod(s)
  podLabels: # Abi: 'Low' for app pods, 'Medium' for jobs
    DataClass: Low

  ##  webapp.containerSecurityContext Security context for the container
  containerSecurityContext: # Abi: modified for OpenShift restricted scc
    runAsNonRoot: true
    readOnlyRootFilesystem: true
  ##  runAsUser: 1001870000

  ## Configure extra options for the webapp containers' liveness and readiness probes,
  ## see https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  livenessProbe:
    # -- Enable livenessProbe on the webapp
    enabled: true
    initialDelaySeconds: 100
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

  readinessProbe:
    # -- Enable readinessProbe on the webapp
    enabled: true
    initialDelaySeconds: 100
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    # -- Success threshold for readinessProbe
    successThreshold: 1

  service:
    # -- The service type to use for the webapp service
    type: ClusterIP
    # -- The service port to expose the webapp on
    port: 80
    # -- Annotations for the webapp service resource
    annotations: {}

  ## Web app resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 1Gi
    # -- The resources limits for the Web container
    limits: {}
    ## Examples:
    ## requests:
    ##    memory: 256Mi
    ##    cpu: 250m
    # -- The requested resources for the Web container
    requests: {}

  # -- Node labels for pod assignment, see https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Tolerations for webapp pod assignment, see https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  # -- Affinity and anti-affinity for webapp pod assignment, see
  # https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

  ## Configure the ingress resource that allows you to access the Airbyte installation.
  ## ref: http://kubernetes.io/docs/user-guide/ingress/
  ingress:
    # -- Set to true to enable ingress record generation
    enabled: false
    # -- Specifies ingressClassName for clusters >= 1.18+
    className: ""
    # -- Ingress annotations done as key:value pairs
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # -- The list of hostnames to be covered with this ingress record.
    hosts: []
    # - host: chart-example.local
    #   paths:
    #   - path: /
    #     pathType: ImplementationSpecific
    # -- Custom ingress TLS configuration
    tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #   - chart-example.local

    api:
    # -- The webapp API url
    url: /api/v1/
  connector-builder-server:
    url: /connector-builder-api

  fullstory:
    # -- Whether or not to enable fullstory
    enabled: false

  ##  webapp.extraVolumeMounts [array] Additional volumeMounts for webapp container(s).
  ##  Abi: enabled (when using `webapp.containerSecurityContext.readOnlyRootFilesystem=true`):
  extraVolumeMounts:
     - name: var-run
       mountPath: /var/run/
     - name: var-cache-nginx
       mountPath: /var/cache/nginx
     - mountPath: /etc/nginx/conf.d
       name: nginx-conf-d

  ##  webapp.extraVolumes [array] Additional volumes for webapp pod(s).
  ## Abi: enabled (when using `webapp.containerSecurityContext.readOnlyRootFilesystem=true`):
  extraVolumes:
     - name: var-run
       emptyDir: {}
     - name: var-cache-nginx
       emptyDir: {}
     - name: nginx-conf-d
       emptyDir: {}

  ##  extraContainer [array] Additional container for server pod(s)

  # extraContainers:
  #   - name: otel_collector
  #     image: somerepo/someimage:sometag
  #     args: [
  #         "--important-args"
  #     ]
  #     ports:
  #       - containerPort: 443
  #     volumeMounts:
  #       - name: volumeMountCool
  #         mountPath: /some/path
  #         readOnly: true
  # -- Additional container for server pods
  extraContainers: []

  ##  extraInitContainers [array] Additional init containers for server pod(s)

  # Abi: not using the connector builder, as it has issues with OpenShift restricted security context
  # extraInitContainers:
  #   - name: sleepy
  #     image: alpine
  #     command: ['sleep', '60']
  # -- Additional init containers for server pods
  extraInitContainers: []

  ## Example: (With default env vars and values taken from generated config map)
  # extraEnv:
  #   - name: POSTGRES_USER
  #     valueFrom:
  #       secretKeyRef:
  #         name: airbyte-secrets
  #         key: DATABASE_USER
  #   - name: POSTGRES_PWD
  #     valueFrom:
  #       secretKeyRef:
  #         name: airbyte-secrets
  #         key: DATABASE_PASSWORD
  #   - name: DYNAMIC_CONFIG_FILE_PATH
  #     value: "config/dynamicconfig/development.yaml"
  #   - name: DB
  #     value: "postgresql"
  #   - name: DB_PORT
  #     valueFrom:
  #       configMapKeyRef:
  #         name: airbyte-env
  #         key: DATABASE_PORT
  #   - name: POSTGRES_SEEDS
  #     valueFrom:
  #       configMapKeyRef:
  #         name: airbyte-env
  #         key: DATABASE_HOST
  # -- Supply extra env variables to main container using full notation
  extraEnv: []
  ## Example:
  ## secrets:
  ##   DATABASE_PASSWORD: strong-password
  ##   DATABASE_USER: my-db-user
  # -- Supply additional secrets to container
  secrets: {}

  ## Example:
  ## env_vars:
  ##   DATABASE_HOST: airbyte-db
  ##   DATABASE_PORT: 5432
  # -- Supply extra env variables to main container using simplified notation
  env_vars: {}

## @section Pod Sweeper parameters

pod-sweeper:
  enabled: true
  image:
    # -- The image repository to use for the pod sweeper
    repository: bitnami/kubectl
    # -- The pull policy for the pod sweeper image
    pullPolicy: IfNotPresent
    tag: latest

  # -- Add extra annotations to the podSweeper pod
  podAnnotations: {}

  ##  podSweeper.podLabels [object] Add extra labels to the podSweeper pod
  ##
  podLabels: # Abi: 'Low' for app pods, 'Medium' for jobs
    DataClass: Low

  ##  podSweeper.containerSecurityContext Security context for the container
  containerSecurityContext: # Abi: modified for OpenShift restricted scc
    runAsNonRoot: true
  ##  runAsUser: 1001870000

  ## Configure extra options for the podSweeper containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ##  podSweeper.livenessProbe.enabled Enable livenessProbe on the podSweeper
  ##  podSweeper.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ##  podSweeper.livenessProbe.periodSeconds Period seconds for livenessProbe
  ##  podSweeper.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ##  podSweeper.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ##  podSweeper.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    # -- Enable livenessProbe on the podSweeper
    enabled: true
    initialDelaySeconds: 50 # Abi: extended
    periodSeconds: 30
    # -- Timeout seconds for livenessProbe
    timeoutSeconds: 1
    # -- Failure threshold for livenessProbe
    failureThreshold: 3
    # -- Success threshold for livenessProbe
    successThreshold: 1

  readinessProbe:
    # -- Enable readinessProbe on the podSweeper
    enabled: true
    initialDelaySeconds: 50 # Abi: extended
    periodSeconds: 30
    # -- Timeout seconds for readinessProbe
    timeoutSeconds: 1
    # -- Failure threshold for readinessProbe
    failureThreshold: 3
    # -- Success threshold for readinessProbe
    successThreshold: 1

  ## Pod Sweeper app resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 1Gi
    # -- The resources limits for the podSweeper container
    limits: {}
    ## Examples:
    ## requests:
    ##    memory: 256Mi
    ##    cpu: 250m
    # -- The requested resources for the podSweeper container
    requests: {}

  # -- Node labels for pod assignment, see https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Tolerations for pod assignment, see https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  # -- Affinity and anti-affinity for pod assignment, see https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

  ## Examples:
  ## extraVolumeMounts:
  ##   - name: tmpdir
  ##     mountPath: /tmp
  # -- Additional volumeMounts for podSweeper container(s).
  extraVolumeMounts: []

  ## Examples:
  ## extraVolumes:
  ##   - name: tmpdir
  ##     emptyDir: {}
  # -- Additional volumes for podSweeper pod(s).
  extraVolumes: []

## @section Server parameters

server:
  enabled: true
  # -- Number of server replicas
  replicaCount: 1

  image:
    # -- The repository to use for the airbyte server image.
    repository: airbyte/server
    # -- the pull policy to use for the airbyte server image
    pullPolicy: IfNotPresent

  # -- Add extra annotations to the server pods
  podAnnotations: {}

  ##  server.podLabels [object] Add extra labels to the server pod(s)
  ##
  podLabels: # Abi: 'Low' for app pods, 'Medium' for jobs
    DataClass: Low

  ##  server.containerSecurityContext Security context for the container
  containerSecurityContext: # Abi: modified for OpenShift restricted scc
    runAsNonRoot: true
    readOnlyRootFilesystem: true
  ##  runAsUser: 100187000


  ## Configure extra options for the server containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  livenessProbe:
    # -- Enable livenessProbe on the server
    enabled: true
    initialDelaySeconds: 100
    periodSeconds: 10
    # -- Timeout seconds for livenessProbe
    timeoutSeconds: 10
    # -- Failure threshold for livenessProbe
    failureThreshold: 3
    # -- Success threshold for livenessProbe
    successThreshold: 1

  readinessProbe:
    # -- Enable readinessProbe on the server
    enabled: true
    initialDelaySeconds: 100
    periodSeconds: 10
    # -- Timeout seconds for readinessProbe
    timeoutSeconds: 10
    # -- Failure threshold for readinessProbe
    failureThreshold: 3
    # -- Success threshold for readinessProbe
    successThreshold: 1

  ## server resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 1Gi
    # -- The resources limits for the server container
    limits: {}
    ## Examples:
    ## requests:
    ##    memory: 256Mi
    ##    cpu: 250m
    # -- The requested resources for the server container
    requests: {}

  # -- Node labels for pod assignment, see https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Tolerations for server pod assignment, see https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  # -- Affinity and anti-affinity for server pod assignment, see
  # https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

  log:
    # -- The log level to log at
    level: "INFO"

  ##  server.extraVolumeMounts [array] Additional volumeMounts for server container(s).
  ## Abi: enabled (when using `server.containerSecurityContext.readOnlyRootFilesystem=true`):
  extraVolumeMounts:
    - name: tmpdir
      mountPath: /tmp
  ##  extraVolumeMounts: []

  ##  server.extraVolumes [array] Additional volumes for server pod(s).
  ## Abi: enabled  (when using `server.containerSecurityContext.readOnlyRootFilesystem=true`):
  extraVolumes:
    - name: tmpdir
      emptyDir: {}
  ##  extraVolumes: []

  ##  extraContainer [array] Additional container for server pod(s)

  # extraContainers:
  #   - name: otel_collector
  #     image: somerepo/someimage:sometag
  #     args: [
  #         "--important-args"
  #     ]
  #     ports:
  #       - containerPort: 443
  #     volumeMounts:
  #       - name: volumeMountCool
  #         mountPath: /some/path
  #         readOnly: true
  # -- Additional container for server pods
  extraContainers: []

  ## Example:
  # extraInitContainers:
  #   - name: sleepy
  #     image: alpine
  #     command: ['sleep', '60']
  # -- Additional init containers for server pods
  extraInitContainers: []

  ## Example: (With default env vars and values taken from generated config map)
  # extraEnv:
  #   - name: AIRBYTE_VERSION
  #     valueFrom:
  #       configMapKeyRef:
  #         name: airbyte-env
  #         key: AIRBYTE_VERSION
  #   - name: API_URL
  #     valueFrom:
  #       configMapKeyRef:
  #         name: airbyte-env
  #         key: API_URL
  #   - name: TRACKING_STRATEGY
  #     valueFrom:
  #       configMapKeyRef:
  #         name: airbyte-env
  #         key: TRACKING_STRATEGY
  #   - name: FULLSTORY
  #     valueFrom:
  #       configMapKeyRef:
  #         name: airbyte-env
  #         key: FULLSTORY
  #   - name: INTERNAL_API_HOST
  #     valueFrom:
  #       configMapKeyRef:
  #         name: airbyte-env
  #         key: INTERNAL_API_HOST
  ##
  # -- Supply extra env variables to main container using full notation
  extraEnv: []
  ## Example:
  ## secrets:
  ##   DATABASE_PASSWORD: strong-password
  ##   DATABASE_USER: my-db-user
  # -- Supply additional secrets to container
  secrets: {}
  ## Example:
  ## env_vars:
  ##   DATABASE_HOST: airbyte-db
  ##   DATABASE_PORT: 5432
  # -- Supply extra env variables to main container using simplified notation
  env_vars: {}

## @section Worker Parameters

worker:
  enabled: true
  # -- Number of worker replicas
  replicaCount: 1

  image:
    repository: ghcr.io/bcgov/nr-containers/airbyte/airbyte-worker # image-registry.openshift-image-registry.svc:5000/a1b9b0-dev/airbyte-worker-modified@sha256:13e6667eb48b2eb1f94ec2ea44b44d1f738f82d1952451f67496a1da3f1b2e6c
    pullPolicy: IfNotPresent

  # -- Add extra annotations to the worker pods
  podAnnotations: {}

  ##  worker.podLabels [object] Add extra labels to the worker pod(s)
  ##
  podLabels: # Abi: 'Low' for app pods, 'Medium' for jobs
    DataClass: Low

  ##  worker.containerSecurityContext Security context for the container
  containerSecurityContext: # Abi: modified for OpenShift restricted scc
    runAsNonRoot: true
    readOnlyRootFilesystem: true
  ##  runAsUser: 1001870000

  ## Configure extra options for the worker containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ##  worker.livenessProbe.enabled Enable livenessProbe on the worker
  ##  worker.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ##  worker.livenessProbe.periodSeconds Period seconds for livenessProbe
  ##  worker.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ##  worker.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ##  worker.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    # -- Enable livenessProbe on the worker
    enabled: true
    initialDelaySeconds: 100
    periodSeconds: 10
    # -- Timeout seconds for livenessProbe
    timeoutSeconds: 1
    # -- Failure threshold for livenessProbe
    failureThreshold: 3
    # -- Success threshold for livenessProbe
    successThreshold: 1

  readinessProbe:
    # -- Enable readinessProbe on the worker
    enabled: true
    initialDelaySeconds: 100
    periodSeconds: 10
    # -- Timeout seconds for readinessProbe
    timeoutSeconds: 1
    # -- Failure threshold for readinessProbe
    failureThreshold: 3
    # -- Success threshold for readinessProbe
    successThreshold: 1

  ## worker resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 1Gi
    #! -- The resources limits for the worker container
    limits: {}
    ## Examples:
    ## requests:
    ##    memory: 256Mi
    ##    cpu: 250m
    # -- The requested resources for the worker container
    requests: {}

  # -- Node labels for pod assignment, see https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Tolerations for worker pod assignment, see https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  # -- Affinity and anti-affinity for worker pod assignment, see
  # https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

  log:
    #! -- The log level to log at.
    level: "INFO"

  ## Example:
  ##
  ## extraEnv:
  ## - name: JOB_KUBE_TOLERATIONS
  ##   value: "key=airbyte-server,operator=Equals,value=true,effect=NoSchedule"
  # -- Additional env vars for worker pods
  extraEnv: 
    # Abi: Fine-tuned resource limits for replication jobs
    JOB_MAIN_CONTAINER_CPU_REQUEST: 50m
    JOB_MAIN_CONTAINER_CPU_LIMIT: 100m
    JOB_MAIN_CONTAINER_MEMORY_REQUEST: 200Mi
    JOB_MAIN_CONTAINER_MEMORY_LIMIT: 300Mi
    NORMALIZATION_JOB_MAIN_CONTAINER_CPU_REQUEST: 50m
    NORMALIZATION_JOB_MAIN_CONTAINER_CPU_LIMIT: 100m
    NORMALIZATION_JOB_MAIN_CONTAINER_MEMORY_REQUEST: 200Mi
    NORMALIZATION_JOB_MAIN_CONTAINER_MEMORY_LIMIT: 300Mi
    CHECK_JOB_MAIN_CONTAINER_CPU_REQUEST: 50m
    CHECK_JOB_MAIN_CONTAINER_CPU_LIMIT: 100m
    CHECK_JOB_MAIN_CONTAINER_MEMORY_REQUEST: 200Mi
    CHECK_JOB_MAIN_CONTAINER_MEMORY_LIMIT: 300Mi
    REPLICATION_ORCHESTRATOR_CPU_REQUEST: 50m
    REPLICATION_ORCHESTRATOR_CPU_LIMIT: 100m
    SIDECAR_KUBE_CPU_LIMIT: 100m
    SIDECAR_KUBE_CPU_REQUEST: 50m
    SOCAT_KUBE_CPU_LIMIT: 100m
    SOCAT_KUBE_CPU_REQUEST: 50m
    SIDECAR_KUBE_MEMORY_LIMIT: 300Mi
    SOCAT_KUBE_MEMORY_LIMIT: 300Mi
    # Abi: 'Low' for app pods, 'Medium' for jobs
    CHECK_JOB_KUBE_LABELS: "DataClass=Medium"
    SPEC_JOB_KUBE_LABELS: "DataClass=Medium"
    DISCOVER_JOB_KUBE_LABELS: "DataClass=Medium"
    NORMALIZATION_JOB_KUBE_LABELS: "DataClass=Medium"
    REPLICATION_JOB_KUBE_LABELS: "DataClass=Medium"  

  ##  worker.extraVolumeMounts [array] Additional volumeMounts for worker container(s).
  ## Abi: enabled (when using `worker.containerSecurityContext.readOnlyRootFilesystem=true`):
  extraVolumeMounts:
    - name: tmpdir
      mountPath: /tmp

  ##  extraVolumeMounts: []

  ##  worker.extraVolumes [array] Additional volumes for worker pod(s).
  ## Abi: enabled (when using `worker.containerSecurityContext.readOnlyRootFilesystem=true`):
  extraVolumes:
    - name: tmpdir
      emptyDir: {}

  ##  extraVolumes: []

  extraContainers: []


## Abi: will use this in prod
  hpa:
    enabled: false

  debug:
    enabled: false

  containerOrchestrator:
    # -- Enable or disable Orchestrator
    enabled: true
    # -- Orchestrator image
    image: ""

  ## current no exist documentations
  activityMaxAttempt: ""
  activityInitialDelayBetweenAttemptsSeconds: ""
  activityMaxDelayBetweenAttemptsSeconds: ""

  maxNotifyWorkers: 5

## @section Metrics parameters
metrics:
  enabled: false

  # -- Number of metrics-reporter replicas
  replicaCount: 1

  image:
    # -- The repository to use for the airbyte metrics-reporter image.
    repository: airbyte/metrics-reporter
    # -- The pull policy to use for the airbyte metrics-reporter image
    pullPolicy: IfNotPresent

  # -- Add extra annotations to the metrics-reporter pod
  podAnnotations: {}

  ##  metrics.podLabels [object] Add extra labels to the metrics-reporter pod
  ##
  podLabels: # Abi: 'Low' for app pods, 'Medium' for jobs
    DataClass: Low

  ##  metrics.containerSecurityContext Security context for the container
  containerSecurityContext: # Abi: modified for OpenShift restricted scc
    runAsNonRoot: true
    readOnlyRootFilesystem: true
  ##  runAsUser: 1001870000

  ## metrics-reporter app resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 1Gi
    # -- The resources limits for the metrics-reporter container
    limits: {}
    ## Examples:
    ## requests:
    ##    memory: 256Mi
    ##    cpu: 250m
    # -- The requested resources for the metrics-reporter container
    requests: {}

  # -- Node labels for pod assignment, see https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Tolerations for metrics-reporter pod assignment, see https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  # -- Affinity and anti-affinity for metrics-reporter pod assignment, see
  # https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

  ## Example:
  ##
  ## extraEnv:
  ## - name: SAMPLE_ENV_VAR
  ##   value: "key=sample-value"
  # -- Additional env vars for metrics-reporter pods
  extraEnv: []

  ##  metrics.extraVolumeMounts [array] Additional volumeMounts for metrics-reporter container(s).
  ## Abi: enabled (when using `metrics.containerSecurityContext.readOnlyRootFilesystem=true`):
  extraVolumeMounts:
    - name: tmpdir
      mountPath: /tmp
  ##  extraVolumeMounts: []

  ##  metrics.extraVolumes [array] Additional volumes for metrics-reporter pod(s).
  ## Abi: enabled (when using `metrics.containerSecurityContext.readOnlyRootFilesystem=true`):
  extraVolumes:
    - name: tmpdir
      emptyDir: {}
  ##  extraVolumes: []

  extraContainers: []

  secrets: {}

  env_vars: {}

## @section Bootloader Parameters

airbyte-bootloader:
  enabled: true
  image:
    # -- The repository to use for the airbyte bootloader image.
    repository: airbyte/bootloader
    # -- The pull policy to use for the airbyte bootloader image
    pullPolicy: IfNotPresent

  # -- Add extra annotations to the bootloader pod
  podAnnotations: {}

  ##  podLabels [object] Add extra labels to the bootloader pod
  ##
  podLabels: # Abi: 'Low' for app pods, 'Medium' for jobs
    DataClass: Low

  # -- Node labels for pod assignment, see https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Tolerations for worker pod assignment, see https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  ## Bootloader resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  resources:
    ## Example:
    ## requests:
    ##    memory: 256Mi
    ##    cpu: 250m
    # -- The requested resources for the airbyte bootloader image
    requests: {}
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 1Gi
    # -- The resources limits for the airbyte bootloader image
    limits: {}

  # -- Affinity and anti-affinity for bootloader pod assignment, see
  # https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

  ## Example: (With default env vars and values taken from generated config map)
  ## extraEnv:
  ##   - name: AIRBYTE_VERSION
  ##     valueFrom:
  ##       configMapKeyRef:
  ##         name: airbyte-env
  ##         key: AIRBYTE_VERSION
  ##   - name: DATABASE_HOST
  ##     valueFrom:
  ##       configMapKeyRef:
  ##         name: airbyte-env
  ##         key: DATABASE_HOST
  ##   - name: DATABASE_PORT
  ##     valueFrom:
  ##       configMapKeyRef:
  ##         name: airbyte-env
  ##         key: DATABASE_PORT
  ##   - name: DATABASE_PASSWORD
  ##     valueFrom:
  ##       secretKeyRef:
  ##         name: airbyte-secrets
  ##         key: DATABASE_PASSWORD
  ##   - name: DATABASE_URL
  ##     valueFrom:
  ##       configMapKeyRef:
  ##         name: airbyte-env
  ##         key: DATABASE_URL
  ##   - name: DATABASE_USER
  ##     valueFrom:
  ##       secretKeyRef:
  ##         name: airbyte-secrets
  ##         key: DATABASE_USER
  # -- Supply extra env variables to main container using full notation
  extraEnv: []
  ## Example:
  ## secrets:
  ##   DATABASE_PASSWORD: strong-password
  ##   DATABASE_USER: my-db-user
  # -- Supply additional secrets to container
  secrets: {}

  ## Example:
  ## env_vars:
  ##   DATABASE_HOST: airbyte-db
  ##   DATABASE_PORT: 5432
  # -- Supply extra env variables to main container using simplified notation
  env_vars: {}
  ## Example:
  # extraContainers:
  #   - name: otel_collector
  #     image: somerepo/someimage:sometag
  #     args: [
  #         "--important-args"
  #     ]
  #     ports:
  #       - containerPort: 443
  #     volumeMounts:
  #       - name: volumeMountCool
  #         mountPath: /some/path
  #         readOnly: true
  # -- Additional container for server pod(s)
  extraContainers: []

  ## Example:
  # extraInitContainers:
  #   - name: sleepy
  #     image: alpine
  #     command: ['sleep', '60']
  # -- Additional init containers for server pods
  extraInitContainers: []

  ##  extraVolumeMounts [array] Additional volumeMounts for server container(s).
  ## Abi: enabled (when using `containerSecurityContext.readOnlyRootFilesystem=true`):
  extraVolumeMounts:
    - name: tmpdir
      mountPath: /tmp
  ##    extraVolumeMounts: []

  ##  extraVolumes [array] Additional volumes for server pod(s).
  ## Abi: enabled (when using `containerSecurityContext.readOnlyRootFilesystem=true`):
  extraVolumes:
    - name: tmpdir
      emptyDir: {}
  ##  extraVolumes: []

temporal:
  enabled: true
  # -- The number of temporal replicas to deploy
  replicaCount: 1

  image:

    # Abi: things can break depending on the version of this Temporalio dependency. If the issue resurfaces, we can look at https://github.com/airbytehq/airbyte/issues/8849
    repository: artifacts.developer.gov.bc.ca/docker-remote/temporalio/auto-setup # image-registry.openshift-image-registry.svc:5000/a1b9b0-dev/auto-setup@sha256:64467fa9d2767fc041566c29cc356edb61263e1b592e82abd70e5d450dbd862c
    pullPolicy: IfNotPresent
    # -- The temporal image tag to use
    tag: "1.20.1"

  service:
    # -- The Kubernetes Service Type
    type: ClusterIP
    # -- The temporal port and exposed kubernetes port
    port: 7233

  # -- Add extra annotations to the temporal pod
  podAnnotations: {}

  ##  temporal.podLabels [object] Add extra labels to the temporal pod
  ##
  podLabels: # Abi: 'Low' for app pods, 'Medium' for jobs
    DataClass: Low

  ##  temporal.containerSecurityContext Security context for the container
  containerSecurityContext: # Abi: modified for OpenShift restricted scc
    runAsNonRoot: true
    readOnlyRootFilesystem: true
  ##  runAsUser: 1001870000

  ##  temporal.extraInitContainers Additional InitContainers to initialize the pod
  ## Abi: enabled (when using `temporal.containerSecurityContext.readOnlyRootFilesystem=true`):
  extraInitContainers:
     - name: config-loader
       image: artifacts.developer.gov.bc.ca/docker-remote/temporalio/auto-setup # image-registry.openshift-image-registry.svc:5000/a1b9b0-dev/auto-setup@sha256:64467fa9d2767fc041566c29cc356edb61263e1b592e82abd70e5d450dbd862c
       command:
         - /bin/sh
         - -c
         - >-
           find /etc/temporal/config/ -maxdepth 1 -mindepth 1 -exec cp -ar {} /config/ \;
       volumeMounts:
         - name: config
           mountPath: /config


  ## Configure extra options for the temporal containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ##  temporal.livenessProbe.enabled Enable livenessProbe on the temporal
  ##  temporal.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ##  temporal.livenessProbe.periodSeconds Period seconds for livenessProbe
  ##  temporal.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ##  temporal.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ##  temporal.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    # -- Enable livenessProbe on the temporal
    enabled: false

  readinessProbe:
    # -- Enable readinessProbe on the temporal
    enabled: false

  # -- Node labels for temporal pod assignment, see https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Tolerations for temporal pod assignment, see https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  # -- Affinity and anti-affinity for temporal pod assignment, see
  # https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

  ## Example:
  ##
  ## extraEnv:
  ## - name: SAMPLE_ENV_VAR
  ##   value: "key=sample-value"
  # -- Additional env vars for temporal pod(s).
  extraEnv: []

  ##  temporal.extraVolumeMounts [array] Additional volumeMounts for temporal container(s).
  ## Abi: enabled (when using `temporal.containerSecurityContext.readOnlyRootFilesystem=true`):
  extraVolumeMounts:
     - name: tmpdir
       mountPath: /tmp
     - name: config
       mountPath: /etc/temporal/config


  ##  temporal.extraVolumes [array] Additional volumes for temporal pod(s).
  ## Abi: enabled (when using `temporal.containerSecurityContext.readOnlyRootFilesystem=true`):
  extraVolumes:
    - name: tmpdir
      emptyDir: {}
    - name: config
      emptyDir: {}


  ## Temporal resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  resources:
    ## Example:
    ## requests:
    ##    memory: 256Mi
    ##    cpu: 250m
    # -- The requested resources for temporal pods
    requests: {}
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 1Gi
    # -- The resources limits for temporal pods
    limits: {}

  extraContainers: []

## @section Airbyte Database parameters

# PostgreSQL chart configuration, see https://github.com/bitnami/charts/blob/master/bitnami/postgresql/values.yaml
postgresql:
  # -- Switch to enable or disable the PostgreSQL helm chart
  enabled: true

  ## image.repository Repository for airbyte-db statefulset
  image:
    repository: airbyte/db
  # -- Airbyte Postgresql username
  postgresqlUsername: airbyte
  # -- Airbyte Postgresql password
  postgresqlPassword: airbyte
  # -- Airbyte Postgresql database
  postgresqlDatabase: db-airbyte
  # fullnameOverride: *db-hostname
  ## This secret is used in case of postgresql.enabled=true and we would like to specify password for newly created postgresql instance
  # -- Name of an existing secret containing the PostgreSQL password ('postgresql-password' key)
  existingSecret: ""
  containerSecurityContext:
    # -- Ensures the container will run with a non-root user
    runAsNonRoot: true
  commonAnnotations:
    # -- It will determine when the hook should be rendered
    helm.sh/hook: pre-install
    # -- The order in which the hooks are executed. If weight is lower, it has higher priority
    helm.sh/hook-weight: "-1"
  # -- Node labels for pod assignment, see https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Tolerations for postgresql pod assignment, see https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  # -- Affinity and anti-affinity for postgresql pod assignment, see
  # https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

# External PostgreSQL configuration, All of these values are only used when postgresql.enabled is set to false
externalDatabase:
  # -- Database host
  host: localhost
  # -- non-root Username for Airbyte Database
  user: airbyte
  # -- Database password
  password: ""
  # -- Name of an existing secret resource containing the DB password
  existingSecret: ""
  # -- Name of an existing secret key containing the DB password
  existingSecretPasswordKey: ""
  # -- Database name
  database: db-airbyte
  # -- Database port number
  port: 5432
  # -- Database full JDBL URL (ex: jdbc:postgresql://host:port/db?parameters)
  jdbcUrl: ""

## @section Logs parameters

minio:
  image:
    # -- Minio image used by Minio helm chart
    repository: artifacts.developer.gov.bc.ca/docker-remote/minio/minio # image-registry.openshift-image-registry.svc:5000/a1b9b0-dev/minio@sha256:7a0fc961ebd7baa1ec89c8ce93920d1a8def1506aafec6c72d112acf0be71048
    # -- Minio tag image
    tag: RELEASE.2023-11-20T22-40-07Z

  storage:
    volumeClaimValue: 500Mi

  # -- Node labels for pod assignment, see https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  # -- Tolerations for minio pod assignment, see https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []

  # -- Affinity and anti-affinity for minio pod assignment, see
  # https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

## @section cron parameters

cron:
  enabled: true
  # -- Number of cron replicas
  replicaCount: 1
  image:
    # -- The repository to use for the airbyte cron image.
    repository: airbyte/cron
    # -- The pull policy to use for the airbyte cron image
    pullPolicy: IfNotPresent

  # -- Add extra annotations to the cron pods
  podAnnotations: {}

  ##  cron.podLabels [object] Add extra labels to the cron pod(s)
  ##
  podLabels: # Abi: 'Low' for app pods, 'Medium' for jobs
    DataClass: Low
  ##  cron.containerSecurityContext Security context for the container
  containerSecurityContext: # Abi: modified for OpenShift restricted scc
    runAsNonRoot: true
    readOnlyRootFilesystem: true
  ##  runAsUser: 1001870000

  ## Configure extra options for the cron containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ##  cron.livenessProbe.enabled Enable livenessProbe on the cron
  ##  cron.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ##  cron.livenessProbe.periodSeconds Period seconds for livenessProbe
  ##  cron.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ##  cron.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ##  cron.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    # -- Enable livenessProbe on the cron
    enabled: true
    # -- Initial delay seconds for livenessProbe
    initialDelaySeconds: 30
    # -- Period seconds for livenessProbe
    periodSeconds: 10
    # -- Timeout seconds for livenessProbe
    timeoutSeconds: 1
    # -- Failure threshold for livenessProbe
    failureThreshold: 3
    # -- Success threshold for livenessProbe
    successThreshold: 1

  readinessProbe:
    # -- Enable readinessProbe on the cron
    enabled: true
    # -- Initial delay seconds for readinessProbe
    initialDelaySeconds: 10
    # -- Period seconds for readinessProbe
    periodSeconds: 10
    # -- Timeout seconds for readinessProbe
    timeoutSeconds: 1
    # -- Failure threshold for readinessProbe
    failureThreshold: 3
    # -- Success threshold for readinessProbe
    successThreshold: 1

  ## cron resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 1Gi
    # -- The resources limits for the cron container
    limits: {}
    ## Examples:
    ## requests:
    ##    memory: 256Mi
    ##    cpu: 250m
    # -- The requested resources for the cron container
    requests: {}

  # -- Node labels for pod assignment, see https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}

  # -- Tolerations for cron pod assignment, see https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []

  # -- Affinity and anti-affinity for cron pod assignment, see
  # https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

  log:
    # -- The log level to log at.
    level: "INFO"

  ##  cron.extraVolumeMounts [array] Additional volumeMounts for cron container(s).
  ## Abi: enabled (when using `cron.containerSecurityContext.readOnlyRootFilesystem=true`):
  extraVolumeMounts:
    - name: tmpdir
      mountPath: /tmp
  ##  extraVolumeMounts: []

  ##  cron.extraVolumes [array] Additional volumes for cron pod(s).
  ## Abi: enabled (when using `cron.containerSecurityContext.readOnlyRootFilesystem=true`):
  extraVolumes:
    - name: tmpdir
      emptyDir: {}
  ##  extraVolumes: []

  ##  extraContainer [array] Additional container for cron pod(s)

  # extraContainers:
  #   - name: otel_collector
  #     image: somerepo/someimage:sometag
  #     args: [
  #         "--important-args"
  #     ]
  #     ports:
  #       - containerPort: 443
  #     volumeMounts:
  #       - name: volumeMountCool
  #         mountPath: /some/path
  #         readOnly: true
  # -- Additional container for cron pods
  extraContainers: []

  ## Example:
  # extraInitContainers:
  #   - name: sleepy
  #     image: alpine
  #     command: ['sleep', '60']
  # -- Additional init containers for cron pods
  extraInitContainers: []

  ##  extraEnv [array] Supply extra env variables to main container using full notation
  ## Abi: enabled (With default env vars and values taken from generated config map)
  # extraEnv:
  #   - name: AIRBYTE_VERSION
  #     valueFrom:
  #       configMapKeyRef:
  #         name: airbyte-env
  #         key: AIRBYTE_VERSION
  #   - name: API_URL
  #     valueFrom:
  #       configMapKeyRef:
  #         name: airbyte-env
  #         key: API_URL
  #   - name: TRACKING_STRATEGY
  #     valueFrom:
  #       configMapKeyRef:
  #         name: airbyte-env
  #         key: TRACKING_STRATEGY
  #   - name: FULLSTORY
  #     valueFrom:
  #       configMapKeyRef:
  #         name: airbyte-env
  #         key: FULLSTORY
  #   - name: INTERNAL_API_HOST
  #     valueFrom:
  #       configMapKeyRef:
  #         name: airbyte-env
  #         key: INTERNAL_API_HOST
  # -- Supply extra env variables to main container using full notation
  extraEnv: []
  ## Example:
  ## secrets:
  ##   DATABASE_PASSWORD: strong-password
  ##   DATABASE_USER: my-db-user
  # -- Supply additional secrets to container
  secrets: {}
  ## Example:
  ## env_vars:
  ##   DATABASE_HOST: airbyte-db
  ##   DATABASE_PORT: 5432
  # -- Supply extra env variables to main container using simplified notation
  env_vars: {}

connector-builder-server:
  enabled: true
  # -- Number of connector-builder-server replicas
  replicaCount: 1

  image:
    # -- The repository to use for the airbyte connector-builder-server image.
    repository: airbyte/connector-builder-server
    # -- The pull policy to use for the airbyte connector-builder-server image
    pullPolicy: IfNotPresent

  livenessProbe:
    # -- Enable livenessProbe on the server
    enabled: true
    initialDelaySeconds: 100 # Abi: extended
    periodSeconds: 10
    # -- Timeout seconds for livenessProbe
    timeoutSeconds: 10
    # -- Failure threshold for livenessProbe
    failureThreshold: 3
    # -- Success threshold for livenessProbe
    successThreshold: 1

  readinessProbe:
    # -- Enable readinessProbe on the server
    enabled: true
    initialDelaySeconds: 100 # Abi: extended
    periodSeconds: 10
    # -- Timeout seconds for readinessProbe
    timeoutSeconds: 10
    # -- Failure threshold for readinessProbe
    failureThreshold: 3
    # -- Success threshold for readinessProbe
    successThreshold: 1

  ## connector-builder-server resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 1Gi
    # -- The resources limits for the connector-builder-server container
    limits: {}
    ## Examples:
    ## requests:
    ##    memory: 256Mi
    ##    cpu: 250m
    # -- The requested resources for the connector-builder-server container
    requests: {}

  log:
    # -- The log level to log at.
    level: "INFO"

  env_vars: {}
  service:
    port: 80

airbyte-api-server:
  enabled: true
  # -- Number of airbyte-api-server replicas
  replicaCount: 1

  image:
    # -- The repository to use for the airbyte airbyte-api-server image.
    repository: airbyte/airbyte-api-server
    # -- The pull policy to use for the airbyte airbyte-api-server image
    pullPolicy: IfNotPresent

  livenessProbe:
    # -- Enable livenessProbe on the server
    enabled: true
    initialDelaySeconds: 100 # Abi: extended
    periodSeconds: 10
    # -- Timeout seconds for livenessProbe
    timeoutSeconds: 10
    # -- Failure threshold for livenessProbe
    failureThreshold: 3
    # -- Success threshold for livenessProbe
    successThreshold: 1

  readinessProbe:
    # -- Enable readinessProbe on the server
    enabled: true
    initialDelaySeconds: 100 # Abi: extended
    periodSeconds: 10
    # -- Timeout seconds for readinessProbe
    timeoutSeconds: 10
    # -- Failure threshold for readinessProbe
    failureThreshold: 3
    # -- Success threshold for readinessProbe
    successThreshold: 1

  ## airbyte-api-server resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  resources:

  ## Abi: increased resource limits so that we can trigger jobs (from Airflow) with the API, probably too high but haven't found the ideal limits yet
    limits:
      cpu: 2
      memory: 2Gi
    # limits: {}
    requests:
      memory: 1Gi
      cpu: 1
    # requests: {}


  ##  airbyte-api-server.log.level The log level to log at.
  log:
    level: "INFO"

  env_vars: {}
  service:
    port: 80

  # - Configure the ingress resource that allows you to access the Airbyte API, see http://kubernetes.io/docs/user-guide/ingress/
  ingress:
    # -- Set to true to enable ingress record generation
    enabled: false
    # -- Specifies ingressClassName for clusters >= 1.18+
    className: ""
    # -- Ingress annotations done as key:value pairs
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # -- The list of hostnames to be covered with this ingress record.
    hosts: []
    # - host: chart-example.local
    #   paths:
    #   - path: /
    #     pathType: ImplementationSpecific
    # -- Custom ingress TLS configuration
    tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #   - chart-example.local

keycloak:
  enabled: false
  env_vars: {}

  auth:
    adminUsername: airbyteAdmin
    adminPassword: keycloak123

keycloak-setup:
  enabled: false
  env_vars: {}

workload-api-server:
  enabled: false

  bearerToken: token

  # -- airbyte-api-server replicas
  replicaCount: 1

  image:
    # -- The repository to use for the airbyte-workload-api-server image.
    repository: airbyte/workload-api-server
    # -- The pull policy to use for the airbyte-workload-api-server image
    pullPolicy: IfNotPresent

  livenessProbe:
    # -- Enable livenessProbe on the server
    enabled: true
    # -- Initial delay seconds for livenessProbe
    initialDelaySeconds: 30
    # -- Period seconds for livenessProbe
    periodSeconds: 10
    # -- Timeout seconds for livenessProbe
    timeoutSeconds: 10
    # -- Failure threshold for livenessProbe
    failureThreshold: 3
    # -- Success threshold for livenessProbe
    successThreshold: 1

  readinessProbe:
    # -- Enable readinessProbe on the server
    enabled: true
    # -- Initial delay seconds for readinessProbe
    initialDelaySeconds: 10
    # -- Period seconds for readinessProbe
    periodSeconds: 10
    # -- Timeout seconds for readinessProbe
    timeoutSeconds: 10
    # -- Failure threshold for readinessProbe
    failureThreshold: 3
    # -- Success threshold for readinessProbe
    successThreshold: 1

  ## airbyte-workload-api-server resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  resources:
    ## Example:
    ## limits:
    ##    cpu: 200m
    ##    memory: 1Gi
    # -- The resources limits for the airbyte-workload-api-server container
    limits: {}
    ## Examples:
    ## requests:
    ##    memory: 256Mi
    ##    cpu: 250m
    # -- The requested resources for the airbyte-workload-api-server container
    requests: {}

  log:
    # -- The log level at which to log
    level: "INFO"

  nodeSelector: {}
  env_vars: {}
  service:
    port: 8007

  # Configure the ingress resource that allows you to access the Airbyte Workload API, see http://kubernetes.io/docs/user-guide/ingress/
  ingress:
    # -- Set to true to enable ingress record generation
    enabled: false
    # -- Specifies ingressClassName for clusters >= 1.18+
    className: ""
    # -- Ingress annotations done as key:value pairs
    annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # -- The list of hostnames to be covered with this ingress record
    hosts: []
    # - host: chart-example.local
    #   paths:
    #   - path: /
    #     pathType: ImplementationSpecific
    # -- Custom ingress TLS configuration
    tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #   - chart-example.local
